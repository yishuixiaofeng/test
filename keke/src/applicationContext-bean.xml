<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">
    <!-- 1. 数据源 : DriverManagerDataSource -->
    <bean id="datasource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://123.206.90.124:3306/keke"/>
        <property name="username" value="liu" />
        <property name="password" value="123456" />
    </bean>
    <!-- 
2. mybatis的SqlSession的工厂: SqlSessionFactoryBean 
dataSource / typeAliasesPackage
-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="datasource" />
        <property name="typeAliasesPackage" value="com.keke.bean" />
        <property name="configLocation" value="classpath:applicationContext-mybatis.xml" />
    </bean>
    <!-- 
3. mybatis自动扫描加载Sql映射文件 : MapperScannerConfigurer 
sqlSessionFactory / basePackage
-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.keke.mapper" />
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>
    <!-- 4. 事务管理 : DataSourceTransactionManager -->
    <bean id="manager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="datasource" />
    </bean>
    <!-- 5. 使用声明式事务 -->
    <tx:annotation-driven transaction-manager="manager" />
    
    <context:component-scan base-package="com.keke">   
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />   
	</context:component-scan>  	
    
    <!-- 5. 异常处理  -->
    <bean id="exceptionHandler" class="com.keke.exception.OrderExceptionHandler"/> 
    
    <!-- 用于持有ApplicationContext,可以使用SpringContextHolder.getBean('xxxx')的静态方法得到spring bean对象
	<bean class="benguo.tyfo.order.handler.SpringContextHandler" lazy-init="false" />   
	 -->  
   
   <import resource="applicationContext-locale.xml"/>
     <!-- 引入同文件夹下的redis属性配置文件 
    <import resource="applicationContext-redis.xml"/>
    
    
    <import resource="applicationContext-quartz.xml"/>
    -->
</beans>