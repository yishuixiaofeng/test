<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd"
    default-lazy-init="true">
    <!-- 资源文件绑定器 -->
    <!--
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="/WEB-INF/messages/message" />
        <property name="useCodeAsDefaultMessage" value="true" />
    </bean>
    -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
       	<property name="basename" value="config/i18n/messages" />
        <property name="cacheSeconds" value="3600"/>
        <property name="useCodeAsDefaultMessage" value="true" />
    </bean>
   
    <!-- *添加配置拦截器*    国际化操作 拦截器 必需配置，可以和其它国际化方式通用(这个配置，是不论请求级别的国际化，还是Cookie级别的国际化，再或者Session级别的国际化，都必需有配置这个拦截器 ，否则会不能使用。) -->
    <bean id="localeChangeInterceptor" class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"/>
   
    <!-- *设置拦截器*   基于request的拦截器,将拦截器注入到你的UrlHandlerMapping中  -->
    <!-- 注意请求参数为locale，例如locale=zh_CN,  在controller里面获取资源文件的时候, 注意使用RequestContextUtils.getLocale(request)替代request.getLocale()获取locale信息. -->
    <bean id="defaultUrlMapping" class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping">
        <property name="interceptors" ref="localeChangeInterceptor"/>
        <property name="order">
            <value>1</value>
        </property>
    </bean>
   
    <!-- 另外一种拦截器设置
    <bean class="org.springframework.web.servlet.mvc.support.ControllerClassNameHandlerMapping">
        <property name="interceptors" ref="localeChangeInterceptor"/>
    </bean>
    -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver"/>
   
    <!-- 基于Session的国际化配置,拦截器和基于请求的相同  -->
    <!--
    <bean id="localeSessionResolver" class="org.springframework.web.servlet.i18n.SessionLocaleResolver"></bean>
    -->
</beans>
